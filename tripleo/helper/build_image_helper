#!/bin/bash

#
# Additional functions to help with image building
#

sudo mkdir -p ${DBAAS_IMAGES}

build_images() {
    echo "Checking images"
    nova image-list | grep ${MYSQL_IMAGE_NAME} > /dev/null 2>&1
    if [ $? -ne 0 ]; then
        image_create ${DBAAS_IMAGES} ${MYSQL_IMAGE_NAME} trove-mysql
    fi

    nova image-list | grep ${RABBITMQ_IMAGE_NAME} > /dev/null 2>&1
    if [ $? -ne 0 ]; then
        image_create ${DBAAS_IMAGES} ${RABBITMQ_IMAGE_NAME} rabbitmq-server
    fi

    nova image-list | grep ${API_IMAGE_NAME} > /dev/null 2>&1
    if [ $? -ne 0 ]; then
        image_create ${DBAAS_IMAGES} ${API_IMAGE_NAME} trove-api
    fi

    nova image-list | grep ${TASKMANAGER_IMAGE_NAME} > /dev/null 2>&1
    if [ $? -ne 0 ]; then
        image_create ${DBAAS_IMAGES} ${TASKMANAGER_IMAGE_NAME} trove-taskmanager
    fi

    nova image-list | grep ${CONDUCTOR_IMAGE_NAME} > /dev/null 2>&1
    if [ $? -ne 0 ]; then
        image_create ${DBAAS_IMAGES} ${CONDUCTOR_IMAGE_NAME} trove-conductor
    fi

    nova image-list | grep ${GUEST_IMAGE_NAME} > /dev/null 2>&1
    if [ $? -ne 0 ]; then
        image_create_guestagent ${DBAAS_IMAGES} ${GUEST_IMAGE_NAME}
    fi
}

image_create() {
    DBAAS_IMAGES=$1
    IMAGE_NAME=$2
    IMAGE_ELEMENTS=$3

    for i in {1..5}
    do
        if [ -f ${DBAAS_IMAGES}/${IMAGE_NAME}.qcow2 ]
        then
            sleep 5
            IMAGE_SUFFIX=${CURRENT_TIME}
            TROVE_REV=`cat ${DBAAS_IMAGES}/${IMAGE_NAME}.d/dib-manifests/dib-manifests-pip/dib-manifest-pip-trove  | grep trove== | cut -d "." -f 4`
            if [ ! -z ${TROVE_REV} ]; then
                IMAGE_SUFFIX=${TROVE_REV}_${CURRENT_TIME}
            fi

            . ${INSTALLER_HOME}/stackrc/stackrc-admin
            echo "Uploading image ${IMAGE_NAME}_${IMAGE_SUFFIX} "
            glance image-create --name ${IMAGE_NAME}_${IMAGE_SUFFIX} --is-public=True --container-format=ovf --disk-format=qcow2 < ${DBAAS_IMAGES}/${IMAGE_NAME}.qcow2 > /dev/null 2>&1
            break
        fi
        echo "Building attempt ${i} image ${IMAGE_NAME}"
        image_build ${DBAAS_IMAGES} ${IMAGE_NAME} ${IMAGE_ELEMENTS} ${LOG_DIR}
    done
}

image_create_guestagent() {
    DBAAS_IMAGES=$1
    IMAGE_NAME=$2
    for i in {1..5}
    do
        if [ -f ${DBAAS_IMAGES}/${IMAGE_NAME}.qcow2 ]
        then
            sleep 5
            IMAGE_SUFFIX=${CURRENT_TIME}
            TROVE_REV=`cat ${DBAAS_IMAGES}/${IMAGE_NAME}.d/dib-manifests/dib-manifests-pip/dib-manifest-pip-trove  | grep trove== | cut -d "." -f 4`
            if [ ! -z ${TROVE_REV} ]; then
                IMAGE_SUFFIX=${TROVE_REV}_${CURRENT_TIME}
            fi
            . ${INSTALLER_HOME}/stackrc/stackrc-admin

            echo "Uploading image ${IMAGE_NAME}_${IMAGE_SUFFIX} "
            glance image-create --name ${IMAGE_NAME}_${IMAGE_SUFFIX}  --is-public=True --container-format=ovf --disk-format=qcow2 < ${DBAAS_IMAGES}/${IMAGE_NAME}.qcow2 > /dev/null 2>&1
            break
        fi
        echo "Building attempt ${i} image ${IMAGE_NAME}"
        image_build_guestagent ${DBAAS_IMAGES} ${IMAGE_NAME} ${INSTALLER_HOME} ${STACK_HOME} ${LOG_DIR}
    done
}

image_build() {
    echo "Image build started, this can take up to 30 minutes"

    DBAAS_IMAGES=$1
    IMAGE_NAME=$2
    IMAGE_ELEMENTS=$3
    LOG_DIR=$4

    echo ${DBAAS_IMAGES}
    echo ${IMAGE_NAME}
    echo ${IMAGE_ELEMENTS}
    echo ${LOG_DIR}

    cd ${STACK_HOME}
    export ELEMENTS_PATH=${DBAAS_IMAGE_ELEMENTS}/elements:${TRIPLEO_IMAGE_ELEMENTS}/elements
    ${STACK_HOME}/diskimage-builder/bin/disk-image-create base vm ubuntu heat-cfntools ${IMAGE_ELEMENTS} -a amd64 -o ${DBAAS_IMAGES}/${IMAGE_NAME} > ${LOG_DIR}/image-${IMAGE_NAME}.log 2>&1
}

image_build_guestagent() {
    echo "Image build started, this can take up to 30 minutes"
    DBAAS_IMAGES=$1
    IMAGE_NAME=$2
    INSTALLER_HOME=$3
    STACK_HOME=$4
    LOG_DIR=$5
    echo ${INSTALLER_HOME}
    echo ${STACK_HOME}

    . ${INSTALLER_HOME}/trove-guestimage-env
    export ELEMENTS_PATH=${DBAAS_IMAGE_ELEMENTS}/elements:${TRIPLEO_IMAGE_ELEMENTS}/elements:${TROVE_INTEGRATION}/scripts/files/elements
    ${STACK_HOME}/diskimage-builder/bin/disk-image-create base vm ubuntu heat-cfntools trove-guestagent ubuntu-percona -a amd64 -o ${DBAAS_IMAGES}/${IMAGE_NAME} > ${LOG_DIR}/image-trove-guestagent-percona.log 2>&1
}
