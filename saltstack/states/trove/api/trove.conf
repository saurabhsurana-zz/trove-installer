[DEFAULT]
# Show more verbose log output (sets INFO log level output)
verbose = True

# Show debugging output in logs (sets DEBUG log level output)
debug = True

# Address to bind the API server
bind_host = 0.0.0.0

## Port the bind the API server to
bind_port = 8779

{% if salt['pillar.get']('trove_service_type', False) %}
datastore_manager = {{ pillar['trove_service_type'] }}
{% endif %}

{% if salt['pillar.get']('trove_default_datastore', False) %}
# default datastore, so 'datastore' isn't required in create instance call
default_datastore = {{ pillar['trove_default_datastore'] }}
{% endif %}

# Number of child processes to run
trove_api_workers = {{ pillar['trove_worker_threads']}}

# AMQP Connection info
rabbit_password = {{ pillar['trove_rabbit_password'] }}

# SQLAlchemy connection string for the reference implementation
# registry server. Any valid SQLAlchemy connection string is fine.
# See: http://www.sqlalchemy.org/docs/05/reference/sqlalchemy/connections.html#sqlalchemy.create_engine
# sql_connection = sqlite:///trove_test.sqlite
sql_connection = {{ pillar['trove_mysql_connection']}}
#sql_connection = postgresql://trove:trove@localhost/trove


# Period in seconds after which SQLAlchemy should reestablish its connection
# to the database.
#
# MySQL uses a default `wait_timeout` of 8 hours, after which it will drop
# idle connections. This can result in 'MySQL Gone Away' exceptions. If you
# notice this, you can lower this value to ensure that SQLAlchemy reconnects
# before MySQL can drop the connection.
sql_idle_timeout = 180

#DB Api Implementation
db_api_implementation = "trove.db.sqlalchemy.api"

# Path to the extensions
api_extensions_path = {{ pillar['trove_path'] }}/extensions/routes

# Configuration options for talking to nova via the novaclient.
trove_auth_url = {{ pillar['trove_auth_url']}}
nova_compute_url =  {{ pillar['trove_nova_compute_url']}}
swift_url = {{ pillar['trove_swift_url']}}

network_label_regex = ^dbaas-.*$
ip_regex = ^10.*$

# Pagination limits
instances_page_size = 50

# Config options for enabling volume service
trove_volume_support = False
block_device_mapping = vdb
device_path = /dev/vdb
{% if salt['pillar.get']('mount_point', False) %}
mount_point = {{ pillar['mount_point']}}
{% else %}
mount_point = /var/lib/mysql
{% endif %}
max_accepted_volume_size = 10
max_instances_per_user = 10
max_volumes_per_user = 100
max_backups_per_user = 50
volume_time_out=30

# Config options for rate limits
http_get_rate = 200
http_post_rate = 9
http_put_rate = 9
http_delete_rate = 99

# trove DNS
trove_dns_support = False

# Taskmanager queue name
taskmanager_queue = taskmanager

# Auth
admin_roles = {{ pillar['trove_admin_role']}}

# Users to ignore for user create/list/delete operations
{% if salt['pillar.get']('ignore_users', False) %}
ignore_users = {{ pillar['ignore_users']}}
{% else %}
ignore_users = os_admin, root
{% endif %}
ignore_dbs = lost+found, mysql, information_schema, volume, performance_schema

# Guest related conf
agent_heartbeat_time = 10
agent_call_low_timeout = 5
agent_call_high_timeout = 100

pydev_debug = disabled

# path to pydevd library. It will be used if pydevd is absent in sys.path
#pydev_path = <path>

# ================= Guestagent related ========================
#guest_config = $pybasedir/etc/trove/trove-guestagent.conf.sample
#cloudinit_location = /etc/trove/cloudinit
root_on_create = False

# Reboot time out for instances
reboot_time_out = 60

# ============ notifer queue kombu connection options ========================

usage_sleep_time = 30
usage_timeout = 900

# ============ Logging information =============================
log_dir = /var/log/trove
log_file = trove-api.log

{% if pillar['enable_trove_api_ssl'] %}
# ============ SSL configuration (and enablement) =============================
# In order to enable SSL for the trove api server, uncomment
# the cert_file and key_file - and of course have those files
# accessible. The existance of those setting and files will
# enable SSL.

[ssl]
cert_file = /etc/trove/ssl/trove-api.cert
key_file = /etc/trove/ssl/trove-api.key
#optional:
#ca_file = /path/to/ca_file
{% endif %}
